public class Queue
{
  Node first;
  Node last;
  
  public Queue()
  {
    first = null;
    last = null;
  }
  
  public Queue(Node n)
  {
    first = n;
    last = first;
  }
  //method to add to the end of the queue
  public void enqueue(Node n)
  {
    if(first == null)
    {
      first = n;
      last = n;
    }
    
    else
    {
      last.setNext(n);
      last = n;
    }
  }
  //Method takes out the first node
  public Node dequeue()
  {
    if(first == null)
    {
      return null;
    }
    
    else
    {
      Node temp = new Node(first.getValue());
      first = first.getNext();
      return temp;
    }
  }
  //This method returns the first node 
  public Node peek()
  {
    if(first == null)
    {
      return null;
    }
    
    else
    {
    return first;
    }
  }
  //Method prints the queue
  public void print()
  {
    //if the queue is empty print out that it is empty
    if(first == null)
    {
      System.out.println("The Queue is empty.");
    }
    //Prints the queue
    else
    {
      Node curr = first;
      System.out.print("Queue entries: ");
      while(curr != null)
      {
        System.out.print(curr.getValue() + ", ");
        curr = curr.getNext();
      }
      System.out.println("\n");
    }
  }
}
      
